Q
ls()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- 'num_vect is less than 1'
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "spfamily")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z", sep = "")
paste(c(1:3), c("X,", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_nam <- is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames(cnames, my_data)
colnames(my_data)
colnames(my_data) <- cnames
my_data
my_dir <- "C:\\Coursera\\r\\ProgrammingAssignment2"
setwd(my_dir)
getwd()
source("cachematrix.R")
b = matrix( c(2, 4, 3, 1, 5, 7, 7, 8, 9), nrow=3, ncol=3)
cacheSolve(b)
my_matrix <- makeCacheMatrix(b)
cacheSolve(b)
my_matrix$get()
my_matrix$getinv()
b
cacheSolve(makeCacheMatrix(b))
rm(list = ls())
source("cachematrix.R")
b = matrix( c(2, 4, 3, 1, 5, 7, 7, 8, 9), nrow=3, ncol=3)
my_matrix <- makeCacheMatrix(b)
cacheSolve(my_matrix)
cacheSolve(my_matrix)
cacheSolve(my_matrix)
rm(list = ls())
source("cachematrix.R")
b = matrix( c(2, 4, 3, 1, 5, 7, 7, 8, 9), nrow=3, ncol=3)
my_matrix <- makeCacheMatrix(b)
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_inv_matrix <- cacheSolve(my_matrix)
my_matrix %*% my_inv_matrix
my_inv_matrix %*% my_matrix
test my_inv_matrix %*% my_matrix
test <- my_inv_matrix %*% my_matrix
my_inv_matrix
my_matrix
test <- my_inv_matrix %*% b
test
b
my_inv_matrix
b %*% my_inv_matrix
m1 <- matrix(c(1/2, -1/4, -1, 3/4), nrow = 2, ncol = 2)
n1 <- matrix(c(6,2,8,4), nrow = 2, ncol = 2)
m1
n1
m1 %*% n1
b
my_inv_matrix
my_inv_matrix %*% b
solveCache(n1)
source("cachematrix.R")
solveCache(n1)
cacheSolve(n1)
makeCacheMatrix(n1)
cacheSolve(n1)
source("cachematrix.R")
n1 <- matrix(c(a,b,c,d), nrow = 2, ncol = 2)
n1 <- matrix(c(6,2,8,4), nrow = 2, ncol = 2)
n1
m1 <- matrix(c(1/2, -1/4, -1, 3/4), nrow = 2, ncol = 2)
m1
myMatrix_object <- makeCacheMatrix(m1)
cacheSolve(myMatrix_object)
solve(n1)
source("cachematrix.R")
b = matrix( c(2, 4, 3, 1, 5, 7, 7, 8, 9), nrow=3, ncol=3)
my_matrix <- makeCacheMatrix(b)
b
cacheSolve(my_matrix)
solve(b)
cacheSolve(my_matrix)
